version: '2.1'
services:
  pg:
    build:
      context: .
      dockerfile: Dockerfile.pg

  conjur:
    image: cyberark/conjur:0.1.0-stable
    command: server -a dev
    environment:
      DATABASE_URL: postgres://postgres@pg/postgres
      CONJUR_DATA_KEY: 'WMfApcDBtocRWV+ZSUP3Tjr5XNU+Z2FdBb6BEezejIs='
      RAILS_ENV: development
    volumes:
      - .:/work
    depends_on:
      - pg

  client:
    build:
      context: .
      dockerfile: Dockerfile.client
    environment:
      CONJUR_APPLIANCE_URL: http://conjur
      CONJUR_ACCOUNT: dev
      CONJUR_AUTHN_LOGIN: admin
      CONJUR_AUTHN_API_KEY:
    volumes:
      - .:/work
    depends_on:
      - conjur

  secretless_test:
    build: .
    environment:
      CONJUR_APPLIANCE_URL: http://conjur
      CONJUR_ACCOUNT: dev
      CONJUR_AUTHN_LOGIN: host/secretless
      CONJUR_AUTHN_API_KEY: 
      AWS_ACCESS_KEY_ID: 
      AWS_SECRET_ACCESS_KEY: 
    depends_on:
      - conjur
    depends_on:
      - pg
    volumes:
      - ./config.conjur_test.yaml:/config.yaml
      - ./run/postgresql/:/var/run/postgresql/

  secretless_dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    entrypoint: bash
    environment:
      CONJUR_APPLIANCE_URL: http://conjur
      CONJUR_ACCOUNT: dev
      AWS_ACCESS_KEY_ID: 
      AWS_SECRET_ACCESS_KEY: 
    depends_on:
      - conjur
    volumes:
      - .:/go/src/github.com/kgilpin/secretless
    depends_on:
      - pg

  psql:
    build:
      context: .
      dockerfile: Dockerfile.psql
    environment:
      CONJUR_APPLIANCE_URL: http://conjur
      CONJUR_ACCOUNT: dev
    entrypoint: bash
    depends_on:
      - pg
